@model Projet.Models.Interview

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Interview</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="JobApplicationId" class="control-label"></label>
                <select asp-for="JobApplicationId"  class="form-control" asp-items="ViewBag.JobApplicationId"></select>
            </div>
            <div class="form-group">
                <label asp-for="ScheduledDate" class="control-label"></label>
                <input asp-for="ScheduledDate" class="form-control" />
                <span asp-validation-for="ScheduledDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Feedback" class="control-label"></label>
                <input asp-for="Feedback" class="form-control" />
                <span asp-validation-for="Feedback" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <input asp-for="Status" class="form-control" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>

   
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
{
    <div class="text-danger">@error.ErrorMessage</div>
}


<style>
    

    select {
        visibility: visible !important;
        opacity: 1 !important;
        height: auto !important;
        display: block !important;
    }

</style>